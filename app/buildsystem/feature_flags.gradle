apply plugin: 'com.android.application'

def BOOLEAN = "boolean"
def TRUE = "true"
def FALSE = "false"

enum Feature {
  ARCHER_PUSH,
  DISCOVERY_CHARTS,
  DISCOVERY_RECOMMENDATIONS,
  EXPLODE_PLAYLISTS_IN_PLAYQUEUES,
  EDIT_PLAYLIST,
  LOCAL_PLAY_HISTORY,
  LOCAL_PLAY_HISTORY_STORAGE,
  PLAY_QUEUE,
  NEW_SYNC_ADAPTER,
  HOLISTIC_TRACKING,
  ALBUMS,
  EXPLORE,
  STATION_PAGE,
  LIKED_STATIONS;
}

android {
  defaultConfig {
    buildConfigField BOOLEAN, Feature.NEW_SYNC_ADAPTER.name(), FALSE
    buildConfigField BOOLEAN, Feature.ARCHER_PUSH.name(), FALSE
    buildConfigField BOOLEAN, Feature.DISCOVERY_CHARTS.name(), FALSE
    buildConfigField BOOLEAN, Feature.DISCOVERY_RECOMMENDATIONS.name(), FALSE
    buildConfigField BOOLEAN, Feature.EXPLODE_PLAYLISTS_IN_PLAYQUEUES.name(), FALSE
    buildConfigField BOOLEAN, Feature.EDIT_PLAYLIST.name(), FALSE
    buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY.name(), FALSE
    buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY_STORAGE.name(), FALSE
    buildConfigField BOOLEAN, Feature.ALBUMS.name(), FALSE
    buildConfigField BOOLEAN, Feature.PLAY_QUEUE.name(), FALSE
    buildConfigField BOOLEAN, Feature.HOLISTIC_TRACKING.name(), FALSE
    buildConfigField BOOLEAN, Feature.EXPLORE.name(), FALSE
    buildConfigField BOOLEAN, Feature.STATION_PAGE.name(), FALSE
    buildConfigField BOOLEAN, Feature.LIKED_STATIONS.name(), FALSE
  }

  buildTypes {
    alpha {
      buildConfigField BOOLEAN, Feature.ARCHER_PUSH.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLODE_PLAYLISTS_IN_PLAYQUEUES.name(), TRUE
      buildConfigField BOOLEAN, Feature.DISCOVERY_RECOMMENDATIONS.name(), TRUE
      buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY.name(), TRUE
      buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY_STORAGE.name(), TRUE
      buildConfigField BOOLEAN, Feature.ALBUMS.name(), TRUE
      buildConfigField BOOLEAN, Feature.PLAY_QUEUE.name(), TRUE
      buildConfigField BOOLEAN, Feature.DISCOVERY_CHARTS.name(), TRUE
      buildConfigField BOOLEAN, Feature.HOLISTIC_TRACKING.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLORE.name(), TRUE
      buildConfigField BOOLEAN, Feature.NEW_SYNC_ADAPTER.name(), TRUE
      buildConfigField BOOLEAN, Feature.STATION_PAGE.name(), TRUE
    }

    beta {
      buildConfigField BOOLEAN, Feature.ARCHER_PUSH.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLODE_PLAYLISTS_IN_PLAYQUEUES.name(), TRUE
      buildConfigField BOOLEAN, Feature.DISCOVERY_RECOMMENDATIONS.name(), TRUE
      buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY_STORAGE.name(), TRUE
      buildConfigField BOOLEAN, Feature.ALBUMS.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLORE.name(), TRUE
      buildConfigField BOOLEAN, Feature.STATION_PAGE.name(), TRUE
    }

    debug {
      buildConfigField BOOLEAN, Feature.ARCHER_PUSH.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLODE_PLAYLISTS_IN_PLAYQUEUES.name(), TRUE
      buildConfigField BOOLEAN, Feature.DISCOVERY_RECOMMENDATIONS.name(), TRUE
      buildConfigField BOOLEAN, Feature.ALBUMS.name(), TRUE
      buildConfigField BOOLEAN, Feature.PLAY_QUEUE.name(), TRUE
      buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY_STORAGE.name(), TRUE
      buildConfigField BOOLEAN, Feature.DISCOVERY_CHARTS.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLORE.name(), TRUE
      buildConfigField BOOLEAN, Feature.NEW_SYNC_ADAPTER.name(), TRUE
      buildConfigField BOOLEAN, Feature.STATION_PAGE.name(), TRUE
    }

    release {
      buildConfigField BOOLEAN, Feature.EXPLODE_PLAYLISTS_IN_PLAYQUEUES.name(), TRUE
      buildConfigField BOOLEAN, Feature.DISCOVERY_RECOMMENDATIONS.name(), TRUE
      buildConfigField BOOLEAN, Feature.ALBUMS.name(), TRUE
      buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY_STORAGE.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLORE.name(), TRUE
      buildConfigField BOOLEAN, Feature.STATION_PAGE.name(), TRUE
      buildConfigField BOOLEAN, Feature.ARCHER_PUSH.name(), TRUE
    }

    preRelease {
      buildConfigField BOOLEAN, Feature.EXPLODE_PLAYLISTS_IN_PLAYQUEUES.name(), TRUE
      buildConfigField BOOLEAN, Feature.DISCOVERY_RECOMMENDATIONS.name(), TRUE
      buildConfigField BOOLEAN, Feature.ALBUMS.name(), TRUE
      buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY_STORAGE.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLORE.name(), TRUE
      buildConfigField BOOLEAN, Feature.STATION_PAGE.name(), TRUE
    }

    releaseNonPlayStore {
      buildConfigField BOOLEAN, Feature.EXPLODE_PLAYLISTS_IN_PLAYQUEUES.name(), TRUE
      buildConfigField BOOLEAN, Feature.DISCOVERY_RECOMMENDATIONS.name(), TRUE
      buildConfigField BOOLEAN, Feature.ALBUMS.name(), TRUE
      buildConfigField BOOLEAN, Feature.LOCAL_PLAY_HISTORY_STORAGE.name(), TRUE
      buildConfigField BOOLEAN, Feature.EXPLORE.name(), TRUE
      buildConfigField BOOLEAN, Feature.STATION_PAGE.name(), TRUE
    }
  }
}
//Excluded unrelated stuff
def excludeConfigFields = ['RUN_ADS_TEST']

task checkFlags(dependsOn: ':app:preBuild') {
  def defaultFeatureFlags = android.defaultConfig.getBuildConfigFields()
  //Checks that the number of flags defined in the enum is consistent
  //with the number of flags defined in the default section.
  if (defaultFeatureFlags.keySet().size() != Feature.values().size())
    failBuild("Inconsistent number of flags between defaultConfig section and Feature enum.")
  //Make sure that all flags in default config section are disabled.
  defaultFeatureFlags.each {
    if (it.getValue().getValue() == TRUE) {
      failBuild("Flag ${it.key} has a TRUE value in defaultConfig. All values by default should be FALSE. " +
              "Please override the Flag ${it.key} value in the build type you are interested in.")
    }
  }
}

//Checks whether all flags in each build are TRUE otherwise fails
//the build asking to remove it since the default value is FALSE.
android.buildTypes.all { buildType ->
  buildType.getBuildConfigFields().each {
    if (!excludeConfigFields.contains(it.key))
      if (it.getValue().getValue() == FALSE) {
      failBuild("Flag ${it.key} has a FALSE value in build type: ${buildType.name}. " +
              "Please remove it or turn its value to TRUE.")
    }
  }
}

def failBuild(message) {
  throw new GradleException(message)
}
