apply plugin: 'com.android.application'

def FLAG = "String"

//Flag values
def DEFAULT_SHOW = "\"DEFAULT_SHOW\""
def DEFAULT_HIDE = "\"DEFAULT_HIDE\""
def UNDER_DEVELOPMENT = "\"UNDER_DEVELOPMENT\""

enum Feature {
  REMOTE_FEATURE_TOGGLES,
  FILTER_COLLECTIONS,
  ARCHER_PUSH,
  MID_TIER,
  DISCOVERY_CHARTS,
  EDIT_PLAYLIST,
  PLAY_QUEUE,
  HOLISTIC_TRACKING,
  EXPLORE,
  SUGGESTED_CREATORS,
  FORCE_SUGGESTED_CREATORS_FOR_ALL,
  MOAT_ADS_VIEWABILITY,
  NEW_HOME,
  APP_INSTALLS,
  PROFILE_BANNER,
  CLEAR_TABLES_ON_SIGNOUT,
  AUTOCOMPLETE,
  ADJUST_DEFERRED_DEEPLINKS,
  CAST_V3;
}

android {
  defaultConfig {
    buildConfigField FLAG, Feature.REMOTE_FEATURE_TOGGLES.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.FILTER_COLLECTIONS.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.ARCHER_PUSH.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.MID_TIER.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.DISCOVERY_CHARTS.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.EDIT_PLAYLIST.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.PLAY_QUEUE.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.HOLISTIC_TRACKING.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.EXPLORE.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.SUGGESTED_CREATORS.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.FORCE_SUGGESTED_CREATORS_FOR_ALL.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.MOAT_ADS_VIEWABILITY.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.NEW_HOME.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.PROFILE_BANNER.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.APP_INSTALLS.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.CLEAR_TABLES_ON_SIGNOUT.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.CAST_V3.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.ADJUST_DEFERRED_DEEPLINKS.name(), UNDER_DEVELOPMENT
    buildConfigField FLAG, Feature.AUTOCOMPLETE.name(), UNDER_DEVELOPMENT
  }

  buildTypes {
    alpha {
      buildConfigField FLAG, Feature.ARCHER_PUSH.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.PLAY_QUEUE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.DISCOVERY_CHARTS.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.HOLISTIC_TRACKING.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.EXPLORE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.SUGGESTED_CREATORS.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.FORCE_SUGGESTED_CREATORS_FOR_ALL.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.CLEAR_TABLES_ON_SIGNOUT.name(), DEFAULT_SHOW
    }

    beta {
      buildConfigField FLAG, Feature.ARCHER_PUSH.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.DISCOVERY_CHARTS.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.PLAY_QUEUE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.EXPLORE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.CLEAR_TABLES_ON_SIGNOUT.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.HOLISTIC_TRACKING.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.ADJUST_DEFERRED_DEEPLINKS.name(), DEFAULT_SHOW
    }

    debug {
      buildConfigField FLAG, Feature.REMOTE_FEATURE_TOGGLES.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.ARCHER_PUSH.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.PLAY_QUEUE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.DISCOVERY_CHARTS.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.EXPLORE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.MOAT_ADS_VIEWABILITY.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.CLEAR_TABLES_ON_SIGNOUT.name(), DEFAULT_SHOW
    }

    release {
      buildConfigField FLAG, Feature.EXPLORE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.ARCHER_PUSH.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.DISCOVERY_CHARTS.name(), DEFAULT_HIDE
      buildConfigField FLAG, Feature.CLEAR_TABLES_ON_SIGNOUT.name(), DEFAULT_SHOW
    }

    preRelease {
      buildConfigField FLAG, Feature.DISCOVERY_CHARTS.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.EXPLORE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.CLEAR_TABLES_ON_SIGNOUT.name(), DEFAULT_SHOW
    }

    releaseNonPlayStore {
      buildConfigField FLAG, Feature.EXPLORE.name(), DEFAULT_SHOW
      buildConfigField FLAG, Feature.DISCOVERY_CHARTS.name(), DEFAULT_HIDE
      buildConfigField FLAG, Feature.CLEAR_TABLES_ON_SIGNOUT.name(), DEFAULT_SHOW
    }
  }
}
//Excluded unrelated stuff
def excludeConfigFields = ['RUN_ADS_TEST']

task checkFlags(dependsOn: ':app:preBuild') {
  def defaultFeatureFlags = android.defaultConfig.getBuildConfigFields()
  //Checks that the number of flags defined in the enum is consistent
  //with the number of flags defined in the default section.
  if (defaultFeatureFlags.keySet().size() != Feature.values().size())
    failBuild("Inconsistent number of flags between defaultConfig section and Feature enum.")
  //Make sure that all flags in default config section are UNDER_DEVELOPMENT.
  defaultFeatureFlags.each {
    def flagValue = it.getValue().getValue()
    if (flagValue == DEFAULT_SHOW || flagValue == DEFAULT_HIDE) {
      failBuild("Flag ${it.key} has a DEFAULT_SHOW or DEFAULT_HIDE value in defaultConfig. " +
              "All values by default should be UNDER_DEVELOPMENT. " +
              "Please override the Flag ${it.key} value in the build type you are interested in.")
    }
  }
}

//Checks whether all flags in each build are DEFAULT_SHOW or DEFAULT_HIDE otherwise fails
//the build asking to remove it since the default should be UNDER_DEVELOPMENT.
android.buildTypes.all { buildType ->
  buildType.getBuildConfigFields().each {
    if (!excludeConfigFields.contains(it.key))
      if (it.getValue().getValue() == UNDER_DEVELOPMENT) {
        failBuild("Flag ${it.key} has a UNDER_DEVELOPMENT value in build type: ${buildType.name}. " +
                "Please remove it or turn its value to DEFAULT_SHOW or DEFAULT_HIDE.")
      }
  }
}

def failBuild(message) {
  throw new GradleException(message)
}
