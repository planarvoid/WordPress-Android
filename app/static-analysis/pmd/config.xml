<?xml version="1.0"?>
<ruleset name="soundcloud"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

    <rule ref="rulesets/java/android.xml"/>
    <rule ref="rulesets/java/basic.xml"/>
    <rule ref="rulesets/java/braces.xml"/>
    <rule ref="rulesets/java/codesize.xml">
        <!-- This was too strict, doesn't account for actors, equals, hashCode, to String, etc. -->
        <exclude name="TooManyMethods"/>
        <!-- One cyclomatic complexity check is enough -->
        <exclude name="StdCyclomaticComplexity"/>
        <exclude name="CyclomaticComplexity"/>
    </rule>
    <rule ref="rulesets/java/design.xml">
        <exclude name="TooFewBranchesForASwitchStatement"/>
        <exclude name="ConfusingTernary"/>
        <!-- we frequently do this on purpose when connecting to the Android life-cycle -->
        <exclude name="UncommentedEmptyMethodBody"/>
        <!-- we do this for Dagger -->
        <exclude name="UncommentedEmptyConstructor"/>
        <exclude name="UseVarargs"/>
        <exclude name="AccessorMethodGeneration"/>
    </rule>
    <rule ref="rulesets/java/empty.xml"/>
<!--
    <rule ref="rulesets/java/naming.xml"/>
-->
    <rule ref="rulesets/java/strictexception.xml">
        <exclude name="AvoidThrowingNullPointerException" />
        <exclude name="AvoidCatchingGenericException" /> <!-- due to RxJava/Callable, we need to do that. -->
        <exclude name="SignatureDeclareThrowsException"/> <!-- as above -->
    </rule>
    <rule ref="rulesets/java/strings.xml"/>
    <rule ref="rulesets/java/typeresolution.xml">
        <exclude name="SignatureDeclareThrowsException" /><!-- due to RxJava/Callable, we need to do that. -->
    </rule>
    <rule ref="rulesets/java/unnecessary.xml">
        <exclude name="UselessParentheses"/>
    </rule>
    <rule ref="rulesets/java/unusedcode.xml"/>

    <rule ref="rulesets/java/optimizations.xml">
        <exclude name="LocalVariableCouldBeFinal"/>
        <exclude name="MethodArgumentCouldBeFinal"/>
        <exclude name="AvoidInstantiatingObjectsInLoops" />
    </rule>

</ruleset>
